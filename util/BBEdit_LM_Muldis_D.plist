<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
  "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>BBEditDocumentType</key>
  <string>CodelessLanguageModule</string>
  <key>BBLMLanguageDisplayName</key>
  <string>Muldis D dialect PTMD_STD</string>
  <key>BBLMLanguageCode</key>
  <string>PTMD</string>
  <key>BBLMSuffixMap</key>
  <array>
    <dict>
      <key>BBLMLanguageSuffix</key>
      <string>.md</string>
    </dict>
  </array>
  <key>BBLMColorsSyntax</key>
  <true/>
  <key>BBLMScansFunctions</key>
  <true/>
  <key>BBLMIsCaseSensitive</key>
  <true/>
  <key>BBLMKeywordList</key>
  <array>
    <string>Muldis_D</string>
    <string>PTMD_STD</string>

    <string>d0</string>
    <string>d0c0</string>
    <string>d0c1</string>
    <string>nothing</string>
    <string>∅</string>

    <string>if</string>
    <string>then</string>
    <string>else</string>
    <string>given</string>
    <string>when</string>
    <string>default</string>

    <string>and</string>
    <string>or</string>
    <string>xnor</string>
    <string>iff</string>
    <string>xor</string>
    <string>union</string>
    <string>intersect</string>
    <string>exclude</string>
    <string>symdiff</string>
    <string>join</string>
    <string>times</string>
    <string>cross</string>

    <string>nand</string>
    <string>nor</string>

    <string>isa</string>
    <string>as</string>
    <string>asserting</string>
    <string>imp</string>
    <string>implies</string>
    <string>nimp</string>
    <string>nif</string>
    <string>mod</string>
    <string>Bx</string>
    <string>Tx</string>
    <string>Ax</string>
    <string>minus</string>
    <string>except</string>
    <string>matching</string>
    <string>antijoin</string>
    <string>semiminus</string>
    <string>semijoin</string>
    <string>divideby</string>
    <string>like</string>

    <string>d</string>
    <string>not</string>
    <string>t</string>
    <string>r</string>
    <string>s</string>
    <string>v</string>

    <string>log</string>
    <string>e</string>
    <string>loge</string>
    <string>round</string>

    <string>min</string>
    <string>max</string>

    <string>depot</string>

    <string>create</string>
    <string>depot_mount</string>
    <string>within</string>

    <string>function</string>
    <string>updater</string>
    <string>procedure</string>
    <string>main</string>

    <string>type</string>
    <string>scalar</string>
    <string>nonscalar</string>
    <string>union</string>
    <string>subset</string>
    <string>possrep</string>
    <string>attr</string>
    <string>is</string>
    <string>constraint</string>
    <string>key</string>
    <string>primary</string>
    <string>distributed</string>

    <string>relvar</string>

    <string>var</string>
    <string>loop</string>

    <string>where</string>

    <string>p5rx</string>

    <string>tuple</string>
    <string>relation</string>
    <string>set</string>
    <string>array</string>
    <string>bag</string>
    <string>from</string>

    <string>ordered</string>
    <string>by</string>
  </array>
  <key>Language Features</key>
  <dict>
    <key>Identifier and Keyword Character Class</key>
    <string><![CDATA[a-zA-Z0-9_∅-]]></string>

    <key>Comment Pattern</key>
    <string><![CDATA[(?x:
      \s+ (Comment \s* : \s*)?
        (\#{2,} | \# [^\#]* \#) (\s+ (\#{2,} | \# [^\#]* \#))* \s+
    )]]></string>

    <key>String Pattern</key>
    <string><![CDATA[(?x:
      (
        (Bool \s* : \s*)? (?<!\w) (false | ⊥ | true | ⊤)
      | (Order \s* : \s*)? (?<!\w) (increase | same | decrease)
      | (RatRoundMeth \s* : \s*)? (?<!\w)
        (
            half_down | half_up
          | half_even
          | to_floor | to_ceiling
          | to_zero | to_inf
        )
      | (Text \s* : \s*)? (?<!\w) ' [^']* ' (\s* ~ \s* ' [^']* ')*
      | ((Octet)? Blob \s* : \s*)? (?<!\w)
        [137F] \s* ; \s* ' [0-9A-F]* ' (\s* ~ \s* ' [0-9A-F]* ')*
      | (((|NN|P)Rat | Instant | Duration) \s* : \s*)? (?<!\w)
        (
            [1-9A-Z] \s* ; \s* -?[0-9A-Z_]+
            (
                \.[0-9A-Z_]+
              | \s* \/ \s* [1-9A-Z][0-9A-Z_]*
              | \s* \* \s* [1-9A-Z][0-9A-Z_]* \s* \^ \s* -?[0-9A-Z_]+
            )
          | (0 | -?[1-9](_?[0-9]+)*)
            (
                \.[0-9](_?[0-9]+)*
              | \s* \/ \s* [1-9](_?[0-9]+)*
              | \s* \* \s* [1-9](_?[0-9]+)* \s* \^ \s* -?[0-9](_?[0-9]+)*
            )
        )
      | ((|NN|P)Int \s* : \s*)? (?<!\w)
        (
            [1-9A-Z] \s* ; \s* -?[0-9A-Z_]+
          | (0 | -?[1-9](_?[0-9]+)*)
        )
      | (|O|B|UCP)String \s* : \s*
        (
            [1-9A-Z] \s* ; \s*
            \[ \s*
              -?[0-9A-Z_]+
              (\s* , \s* -?[0-9A-Z_]+)*
            \s* \]
          | \[ \s*
              (0 | -?[1-9](_?[0-9]+)*)
              (\s* , \s* (0 | -?[1-9](_?[0-9]+)*))*
            \s* \]
        )
      | ((UTC | Float) (Instant | DateTime | Date | Time)
            | UTCDuration) \s* : \s*
        (
            [1-9A-Z] \s* ; \s*
            \[ \s*
              (-?[0-9A-Z_]+)?
              (\s* , \s* (-?[0-9A-Z_]+)?){4}
              \s* , \s* (-?[0-9A-Z_]+
              (
                  \.[0-9A-Z_]+
                | \s* \/ \s* [1-9A-Z][0-9A-Z_]*
                | \s* \* \s* [1-9A-Z][0-9A-Z_]* \s* \^ \s* -?[0-9A-Z_]+
              ))?
            \s* \]
          | \[ \s*
              (0 | -?[1-9](_?[0-9]+)*)?
              (\s* , \s* (0 | -?[1-9](_?[0-9]+)*)?){4}
              \s* , \s* ((0 | -?[1-9](_?[0-9]+)*)
              (
                  \.[0-9](_?[0-9]+)*
                | \s* \/ \s* [1-9](_?[0-9]+)*
                | \s* \* \s* [1-9](_?[0-9]+)* \s* \^ \s* -?[0-9](_?[0-9]+)*
              ))?
            \s* \]
        )
      )
    )]]></string>

    <key>Function Pattern</key>
    <string><![CDATA[(?x:
      (?P<function_name>
        (function|updater|procedure
          |((scalar|nonscalar|union|subset) \s+ type)
          |relvar) \s+
        (
            [a-zA-Z_][a-zA-Z0-9_-]*
          | " [^"]* " ( \s* ~ \s* " [^"]* " )*
        )
      )
    )]]></string>
  </dict>
</dict>
</plist>
