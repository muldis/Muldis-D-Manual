<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
  "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>BBEditDocumentType</key>
  <string>CodelessLanguageModule</string>
  <key>BBLMLanguageDisplayName</key>
  <string>Muldis D dialect PTMD_STD</string>
  <key>BBLMLanguageCode</key>
  <string>PTMD</string>
  <key>BBLMSuffixMap</key>
  <array>
    <dict>
      <key>BBLMLanguageSuffix</key>
      <string>.md</string>
    </dict>
  </array>
  <key>BBLMColorsSyntax</key>
  <true/>
  <key>BBLMScansFunctions</key>
  <true/>
  <key>BBLMIsCaseSensitive</key>
  <true/>
  <key>BBLMKeywordList</key>
  <array>
    <string>Muldis_D</string>
    <string>PTMD_STD</string>
    <string>catalog_abstraction_level</string>
    <string>the_floor</string>
    <string>code_as_data</string>
    <string>plain_rtn_inv</string>
    <string>rtn_inv_alt_syn</string>
    <string>op_char_repertoire</string>
    <string>basic</string>
    <string>extended</string>
    <string>standard_syntax_extensions</string>
    <string>temporal</string>

    <string>D0</string>
    <string>D0C0</string>
    <string>D0C1</string>
    <string>Nothing</string>
    <string>∅</string>

    <string>depot-catalog</string>
    <string>depot-data</string>
    <string>subdepot</string>
    <string>self-local-dbvar-type</string>

    <string>function</string>
    <string>named-value</string>
    <string>value-map</string>
    <string>value-map-unary</string>
    <string>value-filter</string>
    <string>value-constraint</string>
    <string>transition-constraint</string>
    <string>value-reduction</string>
    <string>order-determination</string>
    <string>updater</string>
    <string>recipe</string>
    <string>procedure</string>
    <string>system-service</string>
    <string>scalar-type</string>
    <string>tuple-type</string>
    <string>database-type</string>
    <string>relation-type</string>
    <string>domain-type</string>
    <string>subset-type</string>
    <string>mixin-type</string>

    <string>implements</string>

    <string>possrep</string>
    <string>attr</string>
    <string>is</string>
    <string>constraint</string>
    <string>virtual-attr-map</string>
    <string>determinants</string>
    <string>dependents</string>
    <string>key</string>
    <string>primary-key</string>
    <string>distributed-key</string>
    <string>subset-constraint</string>
    <string>parent</string>
    <string>using-key</string>
    <string>child</string>
    <string>using-attrs</string>

    <string>if</string>
    <string>then</string>
    <string>else</string>
    <string>given</string>
    <string>when</string>
    <string>default</string>

    <string>and</string>
    <string>or</string>
    <string>xnor</string>
    <string>iff</string>
    <string>xor</string>
    <string>union</string>
    <string>intersect</string>
    <string>exclude</string>
    <string>symdiff</string>
    <string>join</string>
    <string>times</string>
    <string>cross-join</string>

    <string>nand</string>
    <string>nor</string>

    <string>isa</string>
    <string>!isa</string>
    <string>not-isa</string>
    <string>as</string>
    <string>asserting</string>
    <string>imp</string>
    <string>implies</string>
    <string>nimp</string>
    <string>nif</string>
    <string>exp</string>
    <string>x</string>
    <string>in-r</string>
    <string>!in-r</string>
    <string>not-in-r</string>
    <string>r-has</string>
    <string>r-!has</string>
    <string>r-not-has</string>
    <string>in-s</string>
    <string>!in-s</string>
    <string>not-in-s</string>
    <string>s-has</string>
    <string>s-!has</string>
    <string>s-not-has</string>
    <string>in-b</string>
    <string>!in-b</string>
    <string>not-in-b</string>
    <string>b-has</string>
    <string>b-!has</string>
    <string>b-not-has</string>
    <string>sub</string>
    <string>!sub</string>
    <string>not-sub</string>
    <string>super</string>
    <string>!super</string>
    <string>not-super</string>
    <string>psub</string>
    <string>!psub</string>
    <string>not-psub</string>
    <string>psuper</string>
    <string>!psuper</string>
    <string>not-psuper</string>
    <string>minus</string>
    <string>except</string>
    <string>!matching</string>
    <string>not-matching</string>
    <string>antijoin</string>
    <string>semiminus</string>
    <string>matching</string>
    <string>semijoin</string>
    <string>divideby</string>
    <string>like</string>
    <string>!like</string>
    <string>not-like</string>

    <string>d</string>
    <string>not</string>
    <string>t</string>
    <string>r</string>
    <string>s</string>
    <string>v</string>

    <string>div</string>
    <string>mod</string>
    <string>log</string>
    <string>log-e</string>
    <string>round</string>

    <string>min</string>
    <string>max</string>

    <string>ordered</string>
    <string>by</string>
    <string>using</string>

    <string>var</string>
    <string>loop</string>

    <string>where</string>

    <string>p5rx</string>

    <string>set</string>
    <string>array</string>
    <string>bag</string>
    <string>from</string>
  </array>
  <key>Language Features</key>
  <dict>
    <key>Identifier and Keyword Character Class</key>
    <string><![CDATA[a-zA-Z0-9_∅!$-]]></string>

    <key>Comment Pattern</key>
    <string><![CDATA[(?x:
      \s+ (\#{2,} | \# [^\#]* \#) (\s+ (\#{2,} | \# [^\#]* \#))* \s+
    )]]></string>

    <key>String Pattern</key>
    <string><![CDATA[(?x:
      (
        (Singleton : (\\\s*\\)?)? (?<!\w) (-Inf | Inf | -∞ | ∞)
      | (Bool : (\\\s*\\)?)? (?<!\w) (False | True | ⊥ | ⊤)
      | (Order : (\\\s*\\)?)? (?<!\w) (Increase | Same | Decrease)
      | (RoundMeth : (\\\s*\\)?)? (?<!\w)
        (
            Down | Up | ToZero | ToInf
          | HalfDown | HalfUp | HalfToZero | HalfToInf
          | HalfEven
        )
      | (Text : (\\\s*\\)?)? (?<!\w) ' [^']* '
      | (Comment : (\\\s*\\)?)? (?<!\w) ` [^`]* `
      | ((Octet)? Blob : (\\\s*\\)?)? (?<!\w)
        [137F] ; (\\\s*\\)? ' [0-9A-F\\\s]* '
      | (((|NN|P)Rat | TAIInstant | TAIDuration) : (\\\s*\\)?)? (?<!\w)
        (
            [1-9A-Z] ; (\\\s*\\)? -?[0-9A-Z_]+
            (
                (\\\s*\\)? \. [0-9A-Z_]+
              | (\\\s*\\)? \/ [1-9A-Z][0-9A-Z_]*
              | (\\\s*\\)? \* [1-9A-Z][0-9A-Z_]* (\\\s*\\)? \^ -?[0-9A-Z_]+
            )
          | (0 | -?[1-9](_?[0-9]+)*)
            (
                (\\\s*\\)? \. [0-9](_?[0-9]+)*
              | (\\\s*\\)? \/ [1-9](_?[0-9]+)*
              | (\\\s*\\)? \* [1-9](_?[0-9]+)*
                  (\\\s*\\)? \^ -?[0-9](_?[0-9]+)*
            )
        )
      | ((|NN|P)Int : (\\\s*\\)?)? (?<!\w)
        (
            [1-9A-Z] ; (\\\s*\\)? -?[0-9A-Z_]+
          | (0 | -?[1-9](_?[0-9]+)*)
        )
      | ((UTC | Float) (Instant | DateTime | Date | Time)
            | UTCDuration) : (\\\s*\\)?
        (
            [1-9A-Z] ; (\\\s*\\)?
            \[ \s*
              (-?[0-9A-Z_]+)?
              (\s* , \s* (-?[0-9A-Z_]+)?){4}
              \s* , \s* (-?[0-9A-Z_]+
              (
                  (\\\s*\\)? \. [0-9A-Z_]+
                | (\\\s*\\)? \/ [1-9A-Z][0-9A-Z_]*
                | (\\\s*\\)? \* [1-9A-Z][0-9A-Z_]*
                    (\\\s*\\)? \^ -?[0-9A-Z_]+
              ))?
            \s* \]
          | \[ \s*
              (0 | -?[1-9](_?[0-9]+)*)?
              (\s* , \s* (0 | -?[1-9](_?[0-9]+)*)?){4}
              \s* , \s* ((0 | -?[1-9](_?[0-9]+)*)
              (
                  (\\\s*\\)? \. [0-9](_?[0-9]+)*
                | (\\\s*\\)? \/ [1-9](_?[0-9]+)*
                | (\\\s*\\)? \* [1-9](_?[0-9]+)*
                    (\\\s*\\)? \^ -?[0-9](_?[0-9]+)*
              ))?
            \s* \]
        )
      )
    )]]></string>

    <key>Function Pattern</key>
    <string><![CDATA[(?x:
      (?P<function_name>
        (function|named-value|value-map|value-map-unary|value-filter
          |value-constraint|transition-constraint|value-reduction
          |order-determination|updater|recipe|procedure|system-service
          |scalar-type|tuple-type|database-type|relation-type|domain-type
          |subset-type|mixin-type) \s+
        (
            [a-zA-Z_][a-zA-Z0-9_-]*
          | " [^"]* "
        )
      )
    )]]></string>
  </dict>
</dict>
</plist>
